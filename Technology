Thanks for sharing your manual mappers, DTOs, and entities. Based on what you provided, Iâ€™ll now walk you through exactly what changes to make to use MapStruct and completely replace the manual mappers.


---

1. Dependencies (Update pom.xml or build.gradle)

For Maven (pom.xml):

<dependency>
  <groupId>org.mapstruct</groupId>
  <artifactId>mapstruct</artifactId>
  <version>1.5.5.Final</version>
</dependency>
<build>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.8.1</version>
      <configuration>
        <annotationProcessorPaths>
          <path>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>1.5.5.Final</version>
          </path>
        </annotationProcessorPaths>
      </configuration>
    </plugin>
  </plugins>
</build>


---

2. Replace Manual Mapper with MapStruct Interfaces

GoodsMapper.java

import org.mapstruct.*;
import org.springframework.stereotype.Component;
import java.util.List;

@Mapper(componentModel = "spring")
public interface GoodsMapper {

    @Mapping(source = "userId", target = "user.id")
    @Mapping(source = "categoryId", target = "category.id")
    GoodsEntity toEntity(GoodsDTO dto);

    @Mapping(source = "user.id", target = "userId")
    @Mapping(source = "category.id", target = "categoryId")
    GoodsDTO toDto(GoodsEntity entity);

    List<GoodsDTO> toDtoList(List<GoodsEntity> goodsEntities);
}

CategoryMapper.java

import org.mapstruct.*;
import org.springframework.stereotype.Component;
import java.util.List;

@Mapper(componentModel = "spring")
public interface CategoryMapper {

    Category toEntity(CategoryDTO dto);

    CategoryDTO toDto(Category category);

    List<CategoryDTO> toDtoList(List<Category> categories);
}


---

3. Remove Manual Mapper Classes

You can delete the original GoodsMapper.java and CategoryMapper.java you manually wrote.


---

4. Update Service Layer

Wherever you had:

GoodsMapper.toDto(goods)

Replace with:

@Autowired
private GoodsMapper goodsMapper;

// Or constructor injection

goodsMapper.toDto(goods)


---

5. Minor Fixes in DTOs and Entities

You have some syntax errors and spacing issues that must be fixed for MapStruct to compile:

Fix in GoodsEntity.java

@Column(name = "expiry_date")
private LocalDate expiryDate;

Fix in GoodsDTO.java

private LocalDate expiryDate;

Fix in Category.java

private String storageRequirements;


---

Summary of What You Needed to Change

Task	Action

Mapper logic	Replace manual methods with @Mapper interfaces
DTOs/entities	Ensure field names are valid (e.g., expiryDate, not expiry Date)
Service classes	Inject and use MapStruct mappers
Dependencies	Add MapStruct to pom.xml or build.gradle
Manual mappers	Delete old classes after migration


